plugins {
    id 'java'
}

group 'GenerateRupor'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"


repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

version = '1.0'
jar {
    configurations {
        jar.archiveName = 'generateForRupor-'+version+'.jar'
    }
    manifest {
        attributes "Main-Class": "Application"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task copyDocs(type: Copy) {
    from 'C:\\Users\\krivokora\\IdeaProjects\\GenerateRupor\\src\\main\\java\\generateForRupor.bat'
    into 'C:\\Users\\krivokora\\IdeaProjects\\GenerateRupor\\build\\libs'
}

task copyDocs2(type: Copy) {
    from 'C:\\Users\\krivokora\\IdeaProjects\\GenerateRupor\\src\\main\\java\\input_values.txt'
    into 'C:\\Users\\krivokora\\IdeaProjects\\GenerateRupor\\build\\libs'
}



task zipDocs(type: Zip) {
    archiveFileName = "generateForRupor-"+version+".zip"
    destinationDirectory = file("$buildDir/output")

    from "$buildDir/libs"
}


task mySuperTask1(type: GradleBuild) {
    tasks = ['build', 'copyDocs', 'copyDocs2', 'zipDocs']
    println("Actions:\ngradle build\ngradle copyDocs\ngradle zipDocs\n")
}

task mySuperTask2 {
    dependsOn 'build'
    dependsOn 'copyDocs'
    dependsOn 'copyDocs2'
    dependsOn 'zipDocs'
    println("Actions:\ngradle build\ngradle copyDocs\ngradle zipDocs\n")
}


//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'Application'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
